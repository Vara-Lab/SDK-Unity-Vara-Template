//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.Vara.NET.NetApiExt.Generated.Model.gear_common
{
    
    
    /// <summary>
    /// >> 555 - Composite[gear_common.ActiveProgram]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class ActiveProgram : BaseType
    {
        
        /// <summary>
        /// >> allocations
        /// </summary>
        public Substrate.Vara.NET.NetApiExt.Generated.Types.Base.BTreeSetT1 Allocations { get; set; }
        /// <summary>
        /// >> pages_with_data
        /// </summary>
        public Substrate.Vara.NET.NetApiExt.Generated.Types.Base.BTreeSetT4 PagesWithData { get; set; }
        /// <summary>
        /// >> gas_reservation_map
        /// </summary>
        public Substrate.Vara.NET.NetApiExt.Generated.Types.Base.BTreeMapT5 GasReservationMap { get; set; }
        /// <summary>
        /// >> code_hash
        /// </summary>
        public Substrate.Vara.NET.NetApiExt.Generated.Model.primitive_types.H256 CodeHash { get; set; }
        /// <summary>
        /// >> code_exports
        /// </summary>
        public Substrate.Vara.NET.NetApiExt.Generated.Types.Base.BTreeSetT3 CodeExports { get; set; }
        /// <summary>
        /// >> static_pages
        /// </summary>
        public Substrate.Vara.NET.NetApiExt.Generated.Model.gear_core.pages.WasmPage StaticPages { get; set; }
        /// <summary>
        /// >> state
        /// </summary>
        public Substrate.Vara.NET.NetApiExt.Generated.Model.gear_common.EnumProgramState State { get; set; }
        /// <summary>
        /// >> expiration_block
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 ExpirationBlock { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "ActiveProgram";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Allocations.Encode());
            result.AddRange(PagesWithData.Encode());
            result.AddRange(GasReservationMap.Encode());
            result.AddRange(CodeHash.Encode());
            result.AddRange(CodeExports.Encode());
            result.AddRange(StaticPages.Encode());
            result.AddRange(State.Encode());
            result.AddRange(ExpirationBlock.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Allocations = new Substrate.Vara.NET.NetApiExt.Generated.Types.Base.BTreeSetT1();
            Allocations.Decode(byteArray, ref p);
            PagesWithData = new Substrate.Vara.NET.NetApiExt.Generated.Types.Base.BTreeSetT4();
            PagesWithData.Decode(byteArray, ref p);
            GasReservationMap = new Substrate.Vara.NET.NetApiExt.Generated.Types.Base.BTreeMapT5();
            GasReservationMap.Decode(byteArray, ref p);
            CodeHash = new Substrate.Vara.NET.NetApiExt.Generated.Model.primitive_types.H256();
            CodeHash.Decode(byteArray, ref p);
            CodeExports = new Substrate.Vara.NET.NetApiExt.Generated.Types.Base.BTreeSetT3();
            CodeExports.Decode(byteArray, ref p);
            StaticPages = new Substrate.Vara.NET.NetApiExt.Generated.Model.gear_core.pages.WasmPage();
            StaticPages.Decode(byteArray, ref p);
            State = new Substrate.Vara.NET.NetApiExt.Generated.Model.gear_common.EnumProgramState();
            State.Decode(byteArray, ref p);
            ExpirationBlock = new Substrate.NetApi.Model.Types.Primitive.U32();
            ExpirationBlock.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
